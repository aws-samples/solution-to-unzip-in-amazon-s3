AWSTemplateFormatVersion: "2010-09-09"

Resources:
  IAMRole00s3unzipEC2Role00HWnil:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Delete"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      MaxSessionDuration: 3600
      RoleName: "s3unzip-EC2-Role"
      Description: "Allows EC2 instances to call AWS services on your behalf."
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "arn:aws:s3:::*/*"
            Action:
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:GetObjectAttributes"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "s3unzip_ec2_s3_permissions"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ec2.amazonaws.com"
  IAMInstanceProfile00s3unzipEC2Role00YJewx:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::InstanceProfile"
    DeletionPolicy: "Delete"
    Properties:
      Path: "/"
      Roles:
      - Ref: "IAMRole00s3unzipEC2Role00HWnil"
      InstanceProfileName:
        Ref: "IAMRole00s3unzipEC2Role00HWnil"
  IAMRole00s3unzipSSMRole00dC7ok:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Delete"
    Properties:
      Path: "/"
      MaxSessionDuration: 3600
      RoleName: "s3unzip-SSM-Role"
      Description: "Allows SSM to call AWS services on your behalf"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: !GetAtt IAMRole00s3unzipEC2Role00HWnil.Arn
            Action:
            - "iam:GetRole"
            - "iam:PassRole"
            Effect: "Allow"
        PolicyName: "s3unzip_ssm_ec2_passrole"
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: !Join ["", ["arn:aws:ec2:*:", !Ref 'AWS::AccountId', ":instance/*"]]
            Condition:
              StringEquals: 
                ec2:ResourceTag/s3unzip: permitted
            Action: "ec2:TerminateInstances"
            Effect: "Allow"
            Sid: "VisualEditor0"
          - Resource: "*"
            Action:
            - "ec2:DescribeInstances"
            - "ec2:DescribeInstanceStatus"
            - "ec2:RunInstances"
            - "ec2:CreateTags"
            Effect: "Allow"
            Sid: "VisualEditor1"
          - Resource: "*"
            Action:
            - "ssm:DescribeInstanceInformation"
            - "ssm:SendCommand"
            - "ssm:ListCommands"
            - "ssm:UpdateInstanceInformation"
            - "ssm:ListCommands"
            - "ssm:ListCommandInvocations"
            - "ssm:GetDocument"
            - "ssm:GetParameter"
            Effect: "Allow"
            Sid: "VisualEditor2"
          - Resource: "arn:aws:s3:::*/*"
            Action:
            - "s3:GetObject"
            - "s3:GetObjectAttributes"
            Effect: "Allow"
            Sid: "VisualEditor3"
          - Resource: "arn:aws:s3:::*"
            Action: "s3:ListBucket"
            Effect: "Allow"
            Sid: "VisualEditor4"
        PolicyName: "s3unzip_ssm_s3_ec2_ssm_permissions"
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "xray:PutTraceSegments"
            - "xray:PutTelemetryRecords"
            - "xray:GetSamplingRules"
            - "xray:GetSamplingTargets"
            Effect: "Allow"
        PolicyName: "s3unzip_ssm_XRayAccessPolicy"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "ssm.amazonaws.com"
          Sid: ""
  IAMRole00s3unzipLambdaRole00mBP63:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Delete"
    Properties:
      Path: "/service-role/"
      MaxSessionDuration: 3600
      RoleName: "s3unzip-Lambda-Role"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "arn:aws:s3:::*/*"
            Action:
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:GetObjectAttributes"
            Effect: "Allow"
            Sid: "VisualEditor0"
          - Resource: "arn:aws:s3:::*"
            Action: "s3:ListBucket"
            Effect: "Allow"
            Sid: "VisualEditor1"
        PolicyName: "s3unzip_lambda_s3_get_put_permissions"
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: !Join [ ':', [ 'arn:aws:logs:*', !Ref 'AWS::AccountId', '*' ] ]
            Action: "logs:CreateLogGroup"
            Effect: "Allow"
            Sid: "VisualEditor1"
          - Resource:
            - !Join [ ':', [ 'arn:aws:logs:*', !Ref 'AWS::AccountId', 'log-group', '/aws/lambda/s3unzip-lambda-small-files', '*' ] ]
            Action:
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Effect: "Allow"
            Sid: "VisualEditor2"
        PolicyName: "s3unzip_lambda_basic_execution_role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
  IAMRole00StepFunctionsmys3Unziprole1r9lo93of009Qks1:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Delete"
    Properties:
      Path: "/service-role/"
      MaxSessionDuration: 3600
      RoleName: "s3unzip-StepFunctions-Role"
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "logs:CreateLogDelivery"
            - "logs:CreateLogStream"
            - "logs:GetLogDelivery"
            - "logs:UpdateLogDelivery"
            - "logs:DeleteLogDelivery"
            - "logs:ListLogDeliveries"
            - "logs:PutLogEvents"
            - "logs:PutResourcePolicy"
            - "logs:DescribeResourcePolicies"
            - "logs:DescribeLogGroups"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "s3unzip_states_basic_execution_role"
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: 
            - !Join ["", ["arn:aws:lambda:*:", !Ref 'AWS::AccountId', ":function:s3unzip-small-files:*"]]
            - !Join ["", ["arn:aws:lambda:*:", !Ref 'AWS::AccountId', ":function:s3unzip-small-files"]]
            Action: "lambda:InvokeFunction"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "s3unzip_states_lambda_permissions"
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "*"
            Action:
            - "xray:PutTraceSegments"
            - "xray:PutTelemetryRecords"
            - "xray:GetSamplingRules"
            - "xray:GetSamplingTargets"
            Effect: "Allow"
            Sid: "VisualEditor0"
        PolicyName: "s3unzip_states_XRayAccessPolicy"
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: "arn:aws:s3:::*/*"
            Action:
            - "s3:GetObject"
            - "s3:GetObjectAttributes"
            Effect: "Allow"
            Sid: "VisualEditor0"
          - Resource: "arn:aws:s3:::*"
            Action: "s3:ListBucket"
            Effect: "Allow"
            Sid: "VisualEditor1"
        PolicyName: "s3unzip_states_s3_permissions"
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Resource: !Join ["", ["arn:aws:ssm:*:", !Ref 'AWS::AccountId', ":automation-definition/*"]]
            Action: "ssm:StartAutomationExecution"
            Effect: "Allow"
          - Resource: !Join ["", ["arn:aws:ssm:*:", !Ref 'AWS::AccountId', ":automation-execution/*"]]
            Action: "ssm:GetAutomationExecution"
            Effect: "Allow"
          - Condition:
              StringEquals:
                iam:PassedToService: "ssm.amazonaws.com"
            Resource: !GetAtt IAMRole00s3unzipSSMRole00dC7ok.Arn
            Action: "iam:PassRole"
            Effect: "Allow"
        PolicyName: "s3unzip_states_ssm_permissions"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "states.amazonaws.com"
